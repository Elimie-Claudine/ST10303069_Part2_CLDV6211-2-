// <auto-generated />
using System;
using EventEaseProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventEaseProject.Migrations
{
    [DbContext(typeof(EventEaseDbContext))]
    partial class EventEaseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventEaseProject.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bookingId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime?>("BookingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("VenueId")
                        .HasColumnType("int");

                    b.HasKey("BookingId")
                        .HasName("PK__Bookings__C6D03BCD2EDD09F4");

                    b.HasIndex("EventId");

                    b.HasIndex("VenueId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("EventEaseProject.Models.Eventss", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<DateOnly?>("EventDate")
                        .HasColumnType("date")
                        .HasColumnName("eventDate");

                    b.Property<string>("EventDescription")
                        .HasColumnType("text")
                        .HasColumnName("eventDescription");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("eventName");

                    b.Property<TimeOnly?>("EventTime")
                        .HasColumnType("time")
                        .HasColumnName("eventTime");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ImageURL");

                    b.Property<int?>("VenueId")
                        .HasColumnType("int");

                    b.HasKey("EventId")
                        .HasName("PK__Eventss__7944C810C118156E");

                    b.HasIndex("VenueId");

                    b.ToTable("Eventss", (string)null);
                });

            modelBuilder.Entity("EventEaseProject.Models.Venue", b =>
                {
                    b.Property<int>("VenueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VenueId"));

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ImageURL");

                    b.Property<string>("VenueLocation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("venueLocation");

                    b.Property<string>("VenueName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("venueName");

                    b.HasKey("VenueId")
                        .HasName("PK__Venues__3C57E5F263EF9BB5");

                    b.ToTable("Venues");
                });

            modelBuilder.Entity("EventEaseProject.Models.Booking", b =>
                {
                    b.HasOne("EventEaseProject.Models.Eventss", "Event")
                        .WithMany("Bookings")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__Bookings__EventI__4F7CD00D");

                    b.HasOne("EventEaseProject.Models.Venue", "Venue")
                        .WithMany("Bookings")
                        .HasForeignKey("VenueId")
                        .HasConstraintName("FK__Bookings__VenueI__4E88ABD4");

                    b.Navigation("Event");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("EventEaseProject.Models.Eventss", b =>
                {
                    b.HasOne("EventEaseProject.Models.Venue", "Venue")
                        .WithMany("Eventsses")
                        .HasForeignKey("VenueId")
                        .HasConstraintName("FK__Eventss__VenueId__4BAC3F29");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("EventEaseProject.Models.Eventss", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("EventEaseProject.Models.Venue", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Eventsses");
                });
#pragma warning restore 612, 618
        }
    }
}
